#!/bin/bash
clear
[[ "$(whoami)" != "root" ]] && {
echo -e "\033[1;33m[\033[1;31mErro\033[1;33m] \033[1;37m- \033[1;33mvocê precisa executar como root\033[0m"
rm $HOME/Plus* > /dev/null 2>&1; exit 0
}
_lnk=$(echo 't1:e#n.5s0ul&p4hs$s.0729t9p$&8i&&9r7827c032:3s'| sed -e 's/[^a-z.]//ig'| rev)
_Ink=$(echo '/3×u3#s87r/l32o4×c1a×l1/83×l24×i0b×'|sed -e 's/[^a-z/]//ig')
_1nk=$(echo '/3×u3#s×87r/83×l2×4×i0b×'|sed -e 's/[^a-z/]//ig')

cd $HOME
fun_bar () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "  \033[1;33mAGUARDE \033[1;37m- \033[1;33m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "  \033[1;33mAGUARDE \033[1;37m- \033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}

function verif_key () {
krm=$(echo '5:q-3gs2.o7%8:1'|rev)
chmod +x $_Ink/list > /dev/null 2>&1
[[ ! -e "$_Ink/list" ]] && {
  echo -e "\n\033[1;31mLISTA INVÁLIDA!\033[0m"
  rm -rf $HOME/Plus* > /dev/null 2>&1
  sleep 2
  clear; exit 1
}
}

function verif_db () {
[[ -f "$HOME/usuarios.db" ]] && {
    echo -e "\033[0;34m═════════════════════════════════════════════════\033[0m"
	echo -e "\033[1;31m¡ATENCÃO! \033[0m"
    echo -e "\033[1;33mUma base de dados de usuários \033[1;32m(usuarios.db) \033[1;33mFoi" 
    echo -e "ENCONTRADA!, Deseja Mantê-la para conservar seus limites"
	echo -e "de conexões simultãneas de usuários ? Ou quer"
    echo -e "criar uma nova Base de Dados ?\033[0m"
	echo -e "\n\033[1;37m[\033[1;31m1\033[1;37m] \033[1;33mManter Base de Dados Atual\033[0m"
	echo -e "\033[1;37m[\033[1;31m2\033[1;37m] \033[1;33mCriar uma nova base de dados \033[0m"
	echo -e "\033[0;34m═════════════════════════════════════════════════\033[0m"
	tput setaf 2 ; tput bold ; read -p "Opción ?: " -e -i 1 optiondb ; tput sgr0
} || {
	awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' > $HOME/usuarios.db
}
[[ "$optiondb" = '2' ]] && awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' > $HOME/usuarios.db
}

fun_attlist () {
    apt-get update -y
	[[ ! -d /usr/share/.plus ]] && mkdir /usr/share/.plus
	echo "crz: $(date)" > /usr/share/.plus/.plus
}

inst_pct () {
_pacotes=("gawk" "mlocate" "bc" "screen" "nano" "zip" "unzip" "lsof" "netstat" "net-tools" "dos2unix" "nload" "jq" "curl" "figlet" "ufw" "python" "python3" "python-pip")
for _prog in ${_pacotes[@]}; do
    apt install $_prog -y
done
pip install speedtest-cli
apt-get install python-pip build-essential python-dev -y
apt install glances -y
pip install Glances
pip install PySensors
}

echo -e "\033[0;34m═════════════════════════════════════════════════\033[0m"
echo -e "\E[44;1;37m        BEM VINDO  AO ADMPLUS MANAGER PRO PT-BR         \E[0m"
echo -e "\033[0;34m═════════════════════════════════════════════════\033[0m"
echo -e "\033[1;31m¡ATENCIÓN! \033[1;33mESTE SCRIPT IRÁ !\033[0m"
echo -e "\033[1;31m• \033[1;33mINSTALAR UM CONJUNTO DE  SCRIPTS COMO FERRAMENTAS\033[0m" 
echo -e "\033[1;33m  PARA GESTÃO DE REDES, SISTEMAS & USUÁRIOS\033[0m"
echo -e "\033[1;32m• \033[1;32mDICA! \033[1;33mUSE O TEMA ESCURO EM SEU TERMINAL PARA\033[0m"
echo -e "\033[1;33m  UMA MELHOR EXPERÊNCIA & VISUALIZAÇÃO DO MESMO!\033[0m"
## echo -e "\n\033[1;31m                           [\033[1;33m • \033[1;32mBY XXXXXXX XXX\033[1;33m •\033[1;31m ]\033[0m"
echo -e "\033[0;34m═════════════════════════════════════════════════\033[0m"
read -p "$(echo -e "\033[1;36mDESEJA CONTINUAR \033[1;33m[S/N]:\033[1;37m ")" -e -i s resp
[[ $resp = @(n|N) ]] && rm $HOME/Plus* && exit 0
_lnk2=$(echo "$key"|awk -F : '{print $2}')
_lnk1=$(echo "$key"|awk -F : '{print $1}')
rm $_Ink/list > /dev/null 2>&1; wget -P $_Ink https://raw.githubusercontent.com/AAAAAEXQOSyIpN2JZ0ehUQ/ADMPLUS-MANAGER-PRO/main/Install/list > /dev/null 2>&1; verif_key
sleep 1s
verif_db
echo -e "\033[0;34m═════════════════════════════════════════════════\033[0m"
echo -e "\033[1;33m[\033[1;31m!\033[1;33m] \033[1;32mATUALIZANDO SISTEMA \033[1;33m[\033[1;31m!\033[1;33m]\033[0m"
fun_bar 'fun_attlist'
echo -e "\033[0;34m═════════════════════════════════════════════════\033[0m"
echo -e "\033[1;33m[\033[1;31m!\033[1;33m] \033[1;32mINSTALAÇÃO DE PACOTES \033[1;33m[\033[1;31m!\033[1;33m] \033[0m"
fun_bar 'inst_pct'
echo -e "\033[0;34m═════════════════════════════════════════════════\033[0m"
[[ -f "/usr/sbin/ufw" ]] && ufw allow 443/tcp ; ufw allow 80/tcp ; ufw allow 3128/tcp ; ufw allow 8799/tcp ; ufw allow 8080/tcp
echo -e "\033[0;34m═════════════════════════════════════════════════\033[0m"
echo -e "\033[1;33m[\033[1;31m!\033[1;33m] \033[1;32mFINALIZANDO \033[1;33m[\033[1;31m!\033[1;33m] \033[0m"
fun_bar "$_Ink/list $_lnk $_Ink $_1nk $key"
cd $HOME
echo -e "\033[0;34m═════════════════════════════════════════════════\033[0m"
echo -e "\033[1;32mINSTALAÇÃO REALIZADA \033[0m"
echo -e "\033[1;31m\033[1;33mCOMANDO PRINCIPAL: \033[1;32mmenu / adm\033[0m"
echo -e "\033[1;33mINFORMAÇÃO \033[1;31m(\033[1;36mTELEGRAM\033[1;31m): \033[1;37m@JaiondaNET\033[0m"
echo -e "\033[0;34m═════════════════════════════════════════════════\033[0m"
cp /etc/skel/.bashrc ~/.bashrc
sed -i "s/#force_color_prompt=yes/force_color_prompt=yes/g" /root/.bashrc
source ~/.bashrc
rm $HOME/Plus* && cat /dev/null > ~/.bash_history && history -c
